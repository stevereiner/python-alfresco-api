# coding: utf-8

"""
    Alfresco Content Services REST API

    **Core API**  Provides access to the core features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_core_client.models.node_body_create import NodeBodyCreate

class TestNodeBodyCreate(unittest.TestCase):
    """NodeBodyCreate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NodeBodyCreate:
        """Test NodeBodyCreate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NodeBodyCreate`
        """
        model = NodeBodyCreate()
        if include_optional:
            return NodeBodyCreate(
                aspect_names = [
                    ''
                    ],
                association = alfresco_core_client.models.node_body_create_association.NodeBodyCreate_association(
                    assoc_type = '', ),
                definition = alfresco_core_client.models.definition.Definition(
                    properties = [
                        alfresco_core_client.models.property.Property(
                            constraints = [
                                alfresco_core_client.models.constraint.Constraint(
                                    description = '', 
                                    id = '', 
                                    parameters = {
                                        'key' : None
                                        }, 
                                    title = '', 
                                    type = '', )
                                ], 
                            data_type = '', 
                            default_value = '', 
                            description = '', 
                            id = '', 
                            is_mandatory = True, 
                            is_mandatory_enforced = True, 
                            is_multi_valued = True, 
                            is_protected = True, 
                            title = '', )
                        ], ),
                name = '?x!u\'K}qz^sEC)lJ*=-jQ+\'6`%cClu,k\'!\'su[.',
                node_type = '',
                permissions = alfresco_core_client.models.permissions_body.PermissionsBody(
                    is_inheritance_enabled = True, 
                    locally_set = [
                        alfresco_core_client.models.permission_element.PermissionElement(
                            access_status = 'ALLOWED', 
                            authority_id = '', 
                            name = '', )
                        ], ),
                properties = None,
                relative_path = '',
                secondary_children = [
                    alfresco_core_client.models.child_association_body.ChildAssociationBody(
                        assoc_type = '', 
                        child_id = '', )
                    ],
                targets = [
                    alfresco_core_client.models.association_body.AssociationBody(
                        assoc_type = '', 
                        target_id = '', )
                    ]
            )
        else:
            return NodeBodyCreate(
                name = '?x!u\'K}qz^sEC)lJ*=-jQ+\'6`%cClu,k\'!\'su[.',
                node_type = '',
        )
        """

    def testNodeBodyCreate(self):
        """Test NodeBodyCreate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
