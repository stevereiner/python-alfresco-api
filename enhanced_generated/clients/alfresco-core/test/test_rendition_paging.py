# coding: utf-8

"""
    Alfresco Content Services REST API

    **Core API**  Provides access to the core features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_core_client.models.rendition_paging import RenditionPaging

class TestRenditionPaging(unittest.TestCase):
    """RenditionPaging unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RenditionPaging:
        """Test RenditionPaging
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RenditionPaging`
        """
        model = RenditionPaging()
        if include_optional:
            return RenditionPaging(
                list = alfresco_core_client.models.rendition_paging_list.RenditionPaging_list(
                    entries = [
                        alfresco_core_client.models.rendition_entry.RenditionEntry(
                            entry = alfresco_core_client.models.rendition.Rendition(
                                content = alfresco_core_client.models.content_info.ContentInfo(
                                    encoding = '', 
                                    mime_type = '', 
                                    mime_type_name = '', 
                                    size_in_bytes = 56, ), 
                                id = '', 
                                status = 'CREATED', ), )
                        ], 
                    pagination = alfresco_core_client.models.pagination.Pagination(
                        count = 56, 
                        has_more_items = True, 
                        max_items = 56, 
                        skip_count = 56, 
                        total_items = 56, ), )
            )
        else:
            return RenditionPaging(
        )
        """

    def testRenditionPaging(self):
        """Test RenditionPaging"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
