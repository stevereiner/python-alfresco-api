# coding: utf-8

"""
    Alfresco Content Services REST API

    **Core API**  Provides access to the core features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_core_client.models.site_role_paging_list import SiteRolePagingList

class TestSiteRolePagingList(unittest.TestCase):
    """SiteRolePagingList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SiteRolePagingList:
        """Test SiteRolePagingList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SiteRolePagingList`
        """
        model = SiteRolePagingList()
        if include_optional:
            return SiteRolePagingList(
                entries = [
                    alfresco_core_client.models.site_role_entry.SiteRoleEntry(
                        entry = alfresco_core_client.models.site_role.SiteRole(
                            guid = '', 
                            id = '', 
                            role = 'SiteConsumer', 
                            site = alfresco_core_client.models.site.Site(
                                description = '', 
                                guid = '', 
                                id = '', 
                                preset = '', 
                                role = 'SiteConsumer', 
                                title = '', 
                                visibility = 'PRIVATE', ), ), )
                    ],
                pagination = alfresco_core_client.models.pagination.Pagination(
                    count = 56, 
                    has_more_items = True, 
                    max_items = 56, 
                    skip_count = 56, 
                    total_items = 56, )
            )
        else:
            return SiteRolePagingList(
        )
        """

    def testSiteRolePagingList(self):
        """Test SiteRolePagingList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
