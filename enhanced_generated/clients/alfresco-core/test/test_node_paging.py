# coding: utf-8

"""
    Alfresco Content Services REST API

    **Core API**  Provides access to the core features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_core_client.models.node_paging import NodePaging

class TestNodePaging(unittest.TestCase):
    """NodePaging unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NodePaging:
        """Test NodePaging
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NodePaging`
        """
        model = NodePaging()
        if include_optional:
            return NodePaging(
                list = alfresco_core_client.models.node_paging_list.NodePaging_list(
                    entries = [
                        alfresco_core_client.models.node_entry.NodeEntry(
                            entry = alfresco_core_client.models.node.Node(
                                allowable_operations = [
                                    ''
                                    ], 
                                aspect_names = [
                                    ''
                                    ], 
                                content = alfresco_core_client.models.content_info.ContentInfo(
                                    encoding = '', 
                                    mime_type = '', 
                                    mime_type_name = '', 
                                    size_in_bytes = 56, ), 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                created_by_user = alfresco_core_client.models.user_info.UserInfo(
                                    display_name = '', 
                                    id = '', ), 
                                definition = alfresco_core_client.models.definition.Definition(
                                    properties = [
                                        alfresco_core_client.models.property.Property(
                                            constraints = [
                                                alfresco_core_client.models.constraint.Constraint(
                                                    description = '', 
                                                    id = '', 
                                                    parameters = {
                                                        'key' : None
                                                        }, 
                                                    title = '', 
                                                    type = '', )
                                                ], 
                                            data_type = '', 
                                            default_value = '', 
                                            description = '', 
                                            id = '', 
                                            is_mandatory = True, 
                                            is_mandatory_enforced = True, 
                                            is_multi_valued = True, 
                                            is_protected = True, 
                                            title = '', )
                                        ], ), 
                                id = '', 
                                is_favorite = True, 
                                is_file = True, 
                                is_folder = True, 
                                is_link = True, 
                                is_locked = True, 
                                modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                modified_by_user = alfresco_core_client.models.user_info.UserInfo(
                                    display_name = '', 
                                    id = '', ), 
                                name = '?x!u\'K}qz^sEC)lJ*=-jQ+\'6`%cClu,k\'!\'su[.', 
                                node_type = '', 
                                parent_id = '', 
                                path = alfresco_core_client.models.path_info.PathInfo(
                                    elements = [
                                        alfresco_core_client.models.path_element.PathElement(
                                            id = '', 
                                            name = '', 
                                            node_type = '', )
                                        ], 
                                    is_complete = True, 
                                    name = '', ), 
                                permissions = alfresco_core_client.models.permissions_info.PermissionsInfo(
                                    inherited = [
                                        alfresco_core_client.models.permission_element.PermissionElement(
                                            access_status = 'ALLOWED', 
                                            authority_id = '', 
                                            name = '', )
                                        ], 
                                    is_inheritance_enabled = True, 
                                    locally_set = [
                                        alfresco_core_client.models.permission_element.PermissionElement(
                                            access_status = 'ALLOWED', 
                                            authority_id = '', 
                                            name = '', )
                                        ], 
                                    settable = [
                                        ''
                                        ], ), 
                                properties = alfresco_core_client.models.properties.properties(), ), )
                        ], 
                    pagination = alfresco_core_client.models.pagination.Pagination(
                        count = 56, 
                        has_more_items = True, 
                        max_items = 56, 
                        skip_count = 56, 
                        total_items = 56, ), 
                    source = alfresco_core_client.models.node.Node(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by_user = , 
                        id = '', 
                        is_favorite = True, 
                        is_file = True, 
                        is_folder = True, 
                        is_link = True, 
                        is_locked = True, 
                        modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        modified_by_user = , 
                        name = '?x!u\'K}qz^sEC)lJ*=-jQ+\'6`%cClu,k\'!\'su[.', 
                        node_type = '', 
                        parent_id = '', ), )
            )
        else:
            return NodePaging(
        )
        """

    def testNodePaging(self):
        """Test NodePaging"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
