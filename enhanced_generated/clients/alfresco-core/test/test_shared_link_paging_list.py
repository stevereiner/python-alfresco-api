# coding: utf-8

"""
    Alfresco Content Services REST API

    **Core API**  Provides access to the core features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_core_client.models.shared_link_paging_list import SharedLinkPagingList

class TestSharedLinkPagingList(unittest.TestCase):
    """SharedLinkPagingList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SharedLinkPagingList:
        """Test SharedLinkPagingList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SharedLinkPagingList`
        """
        model = SharedLinkPagingList()
        if include_optional:
            return SharedLinkPagingList(
                entries = [
                    alfresco_core_client.models.shared_link_entry.SharedLinkEntry(
                        entry = alfresco_core_client.models.shared_link.SharedLink(
                            allowable_operations = [
                                ''
                                ], 
                            allowable_operations_on_target = [
                                ''
                                ], 
                            aspect_names = [
                                ''
                                ], 
                            content = alfresco_core_client.models.content_info.ContentInfo(
                                encoding = '', 
                                mime_type = '', 
                                mime_type_name = '', 
                                size_in_bytes = 56, ), 
                            description = '', 
                            expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = '', 
                            is_favorite = True, 
                            modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            modified_by_user = alfresco_core_client.models.user_info.UserInfo(
                                display_name = '', 
                                id = '', ), 
                            name = '?x!u\'K}qz^sEC)lJ*=-jQ+\'6`%cClu,k\'!\'su[.', 
                            node_id = '', 
                            path = alfresco_core_client.models.path_info.PathInfo(
                                elements = [
                                    alfresco_core_client.models.path_element.PathElement(
                                        id = '', 
                                        name = '', 
                                        node_type = '', )
                                    ], 
                                is_complete = True, 
                                name = '', ), 
                            properties = alfresco_core_client.models.properties.properties(), 
                            shared_by_user = alfresco_core_client.models.user_info.UserInfo(
                                display_name = '', 
                                id = '', ), 
                            title = '', ), )
                    ],
                pagination = alfresco_core_client.models.pagination.Pagination(
                    count = 56, 
                    has_more_items = True, 
                    max_items = 56, 
                    skip_count = 56, 
                    total_items = 56, )
            )
        else:
            return SharedLinkPagingList(
        )
        """

    def testSharedLinkPagingList(self):
        """Test SharedLinkPagingList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
