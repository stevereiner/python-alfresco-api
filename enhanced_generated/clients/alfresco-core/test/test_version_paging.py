# coding: utf-8

"""
    Alfresco Content Services REST API

    **Core API**  Provides access to the core features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_core_client.models.version_paging import VersionPaging

class TestVersionPaging(unittest.TestCase):
    """VersionPaging unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VersionPaging:
        """Test VersionPaging
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VersionPaging`
        """
        model = VersionPaging()
        if include_optional:
            return VersionPaging(
                list = alfresco_core_client.models.version_paging_list.VersionPaging_list(
                    entries = [
                        alfresco_core_client.models.version_entry.VersionEntry(
                            entry = alfresco_core_client.models.version.Version(
                                aspect_names = [
                                    ''
                                    ], 
                                content = alfresco_core_client.models.content_info.ContentInfo(
                                    encoding = '', 
                                    mime_type = '', 
                                    mime_type_name = '', 
                                    size_in_bytes = 56, ), 
                                id = '', 
                                is_file = True, 
                                is_folder = True, 
                                modified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                modified_by_user = alfresco_core_client.models.user_info.UserInfo(
                                    display_name = '', 
                                    id = '', ), 
                                name = '?x!u\'K}qz^sEC)lJ*=-jQ+\'6`%cClu,k\'!\'su[.', 
                                node_type = '', 
                                properties = alfresco_core_client.models.properties.properties(), 
                                version_comment = '', ), )
                        ], 
                    pagination = alfresco_core_client.models.pagination.Pagination(
                        count = 56, 
                        has_more_items = True, 
                        max_items = 56, 
                        skip_count = 56, 
                        total_items = 56, ), )
            )
        else:
            return VersionPaging(
        )
        """

    def testVersionPaging(self):
        """Test VersionPaging"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
