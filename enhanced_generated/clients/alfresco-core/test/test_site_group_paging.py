# coding: utf-8

"""
    Alfresco Content Services REST API

    **Core API**  Provides access to the core features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_core_client.models.site_group_paging import SiteGroupPaging

class TestSiteGroupPaging(unittest.TestCase):
    """SiteGroupPaging unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SiteGroupPaging:
        """Test SiteGroupPaging
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SiteGroupPaging`
        """
        model = SiteGroupPaging()
        if include_optional:
            return SiteGroupPaging(
                list = alfresco_core_client.models.site_group_paging_list.SiteGroupPaging_list(
                    entries = [
                        alfresco_core_client.models.site_group_entry.SiteGroupEntry(
                            entry = alfresco_core_client.models.site_group.SiteGroup(
                                group = alfresco_core_client.models.group_member.GroupMember(
                                    display_name = '', 
                                    id = '', 
                                    member_type = 'GROUP', ), 
                                id = '', 
                                role = 'SiteConsumer', ), )
                        ], 
                    pagination = alfresco_core_client.models.pagination.Pagination(
                        count = 56, 
                        has_more_items = True, 
                        max_items = 56, 
                        skip_count = 56, 
                        total_items = 56, ), )
            )
        else:
            return SiteGroupPaging(
                list = alfresco_core_client.models.site_group_paging_list.SiteGroupPaging_list(
                    entries = [
                        alfresco_core_client.models.site_group_entry.SiteGroupEntry(
                            entry = alfresco_core_client.models.site_group.SiteGroup(
                                group = alfresco_core_client.models.group_member.GroupMember(
                                    display_name = '', 
                                    id = '', 
                                    member_type = 'GROUP', ), 
                                id = '', 
                                role = 'SiteConsumer', ), )
                        ], 
                    pagination = alfresco_core_client.models.pagination.Pagination(
                        count = 56, 
                        has_more_items = True, 
                        max_items = 56, 
                        skip_count = 56, 
                        total_items = 56, ), ),
        )
        """

    def testSiteGroupPaging(self):
        """Test SiteGroupPaging"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
