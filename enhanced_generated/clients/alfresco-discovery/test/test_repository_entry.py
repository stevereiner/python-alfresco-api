# coding: utf-8

"""
    Alfresco Content Services REST API

    **Discovery API**  Provides access to information about Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_discovery_client.models.repository_entry import RepositoryEntry

class TestRepositoryEntry(unittest.TestCase):
    """RepositoryEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RepositoryEntry:
        """Test RepositoryEntry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RepositoryEntry`
        """
        model = RepositoryEntry()
        if include_optional:
            return RepositoryEntry(
                repository = alfresco_discovery_client.models.repository_info.RepositoryInfo(
                    edition = '', 
                    id = '', 
                    license = alfresco_discovery_client.models.license_info.LicenseInfo(
                        entitlements = alfresco_discovery_client.models.entitlements_info.EntitlementsInfo(
                            is_cluster_enabled = True, 
                            is_cryptodoc_enabled = True, 
                            max_docs = 56, 
                            max_users = 56, ), 
                        expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        holder = '', 
                        issued_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        mode = '', 
                        remaining_days = 56, ), 
                    modules = [
                        alfresco_discovery_client.models.module_info.ModuleInfo(
                            description = '', 
                            id = '', 
                            install_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            install_state = '', 
                            title = '', 
                            version = '', 
                            version_max = '', 
                            version_min = '', )
                        ], 
                    status = alfresco_discovery_client.models.status_info.StatusInfo(
                        is_audit_enabled = True, 
                        is_quick_share_enabled = True, 
                        is_read_only = True, 
                        is_thumbnail_generation_enabled = True, ), 
                    version = alfresco_discovery_client.models.version_info.VersionInfo(
                        display = '', 
                        hotfix = '', 
                        label = '', 
                        major = '', 
                        minor = '', 
                        patch = '', 
                        schema = 56, ), )
            )
        else:
            return RepositoryEntry(
                repository = alfresco_discovery_client.models.repository_info.RepositoryInfo(
                    edition = '', 
                    id = '', 
                    license = alfresco_discovery_client.models.license_info.LicenseInfo(
                        entitlements = alfresco_discovery_client.models.entitlements_info.EntitlementsInfo(
                            is_cluster_enabled = True, 
                            is_cryptodoc_enabled = True, 
                            max_docs = 56, 
                            max_users = 56, ), 
                        expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        holder = '', 
                        issued_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        mode = '', 
                        remaining_days = 56, ), 
                    modules = [
                        alfresco_discovery_client.models.module_info.ModuleInfo(
                            description = '', 
                            id = '', 
                            install_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            install_state = '', 
                            title = '', 
                            version = '', 
                            version_max = '', 
                            version_min = '', )
                        ], 
                    status = alfresco_discovery_client.models.status_info.StatusInfo(
                        is_audit_enabled = True, 
                        is_quick_share_enabled = True, 
                        is_read_only = True, 
                        is_thumbnail_generation_enabled = True, ), 
                    version = alfresco_discovery_client.models.version_info.VersionInfo(
                        display = '', 
                        hotfix = '', 
                        label = '', 
                        major = '', 
                        minor = '', 
                        patch = '', 
                        schema = 56, ), ),
        )
        """

    def testRepositoryEntry(self):
        """Test RepositoryEntry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
