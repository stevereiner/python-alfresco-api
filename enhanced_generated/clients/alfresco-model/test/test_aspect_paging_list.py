# coding: utf-8

"""
    Alfresco Content Services REST API

    **Model API**  Provides access to the model features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_model_client.models.aspect_paging_list import AspectPagingList

class TestAspectPagingList(unittest.TestCase):
    """AspectPagingList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AspectPagingList:
        """Test AspectPagingList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AspectPagingList`
        """
        model = AspectPagingList()
        if include_optional:
            return AspectPagingList(
                entries = [
                    alfresco_model_client.models.aspect_entry.AspectEntry(
                        entry = alfresco_model_client.models.abstract_class.AbstractClass(
                            associations = [
                                alfresco_model_client.models.abstract_class_association.AbstractClassAssociation(
                                    description = '', 
                                    id = '', 
                                    is_child = True, 
                                    is_protected = True, 
                                    source = alfresco_model_client.models.abstract_class_association_source.AbstractClassAssociationSource(
                                        cls = '', 
                                        is_mandatory = True, 
                                        is_mandatory_enforced = True, 
                                        is_many = True, 
                                        role = '', ), 
                                    target = alfresco_model_client.models.abstract_class_association_source.AbstractClassAssociationSource(
                                        cls = '', 
                                        is_mandatory = True, 
                                        is_mandatory_enforced = True, 
                                        is_many = True, 
                                        role = '', ), 
                                    title = '', )
                                ], 
                            description = '', 
                            id = '', 
                            included_in_supertype_query = True, 
                            is_archive = True, 
                            is_container = True, 
                            mandatory_aspects = [
                                ''
                                ], 
                            model = alfresco_model_client.models.model.Model(
                                author = '', 
                                description = '', 
                                id = '', 
                                namespace_prefix = '', 
                                namespace_uri = '', ), 
                            parent_id = '', 
                            properties = [
                                alfresco_model_client.models.property.Property(
                                    constraints = [
                                        alfresco_model_client.models.constraint.Constraint(
                                            description = '', 
                                            id = '', 
                                            parameters = {
                                                'key' : None
                                                }, 
                                            title = '', 
                                            type = '', )
                                        ], 
                                    data_type = '', 
                                    default_value = '', 
                                    description = '', 
                                    id = '', 
                                    is_mandatory = True, 
                                    is_mandatory_enforced = True, 
                                    is_multi_valued = True, 
                                    is_protected = True, 
                                    title = '', )
                                ], 
                            title = '', ), )
                    ],
                pagination = alfresco_model_client.models.pagination.Pagination(
                    count = 56, 
                    has_more_items = True, 
                    max_items = 56, 
                    skip_count = 56, 
                    total_items = 56, )
            )
        else:
            return AspectPagingList(
        )
        """

    def testAspectPagingList(self):
        """Test AspectPagingList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
