# coding: utf-8

"""
    Alfresco Content Services REST API

    **Search API**  Provides access to the search features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_search_client.models.request_stats import RequestStats

class TestRequestStats(unittest.TestCase):
    """RequestStats unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RequestStats:
        """Test RequestStats
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RequestStats`
        """
        model = RequestStats()
        if include_optional:
            return RequestStats(
                cardinality = True,
                cardinality_accuracy = 1.337,
                count_distinct = True,
                count_values = True,
                distinct_values = True,
                exclude_filters = [
                    ''
                    ],
                var_field = '',
                label = '',
                max = True,
                mean = True,
                min = True,
                missing = True,
                percentiles = [
                    1.337
                    ],
                stddev = True,
                sum = True,
                sum_of_squares = True
            )
        else:
            return RequestStats(
        )
        """

    def testRequestStats(self):
        """Test RequestStats"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
