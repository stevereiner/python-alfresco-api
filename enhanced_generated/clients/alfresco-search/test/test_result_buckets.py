# coding: utf-8

"""
    Alfresco Content Services REST API

    **Search API**  Provides access to the search features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_search_client.models.result_buckets import ResultBuckets

class TestResultBuckets(unittest.TestCase):
    """ResultBuckets unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResultBuckets:
        """Test ResultBuckets
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResultBuckets`
        """
        model = ResultBuckets()
        if include_optional:
            return ResultBuckets(
                buckets = [
                    alfresco_search_client.models.result_buckets_buckets_inner.ResultBuckets_buckets_inner(
                        count = 56, 
                        display = alfresco_search_client.models.display.display(), 
                        filter_query = '', 
                        label = '', )
                    ],
                label = ''
            )
        else:
            return ResultBuckets(
        )
        """

    def testResultBuckets(self):
        """Test ResultBuckets"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
