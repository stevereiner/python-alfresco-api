# coding: utf-8

"""
    Alfresco Content Services REST API

    **Workflow API**  Provides access to the workflow features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_workflow_client.models.deployment_paging import DeploymentPaging

class TestDeploymentPaging(unittest.TestCase):
    """DeploymentPaging unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeploymentPaging:
        """Test DeploymentPaging
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeploymentPaging`
        """
        model = DeploymentPaging()
        if include_optional:
            return DeploymentPaging(
                list = alfresco_workflow_client.models.deployment_paging_list.DeploymentPaging_list(
                    entries = [
                        alfresco_workflow_client.models.deployment_entry.DeploymentEntry(
                            entry = alfresco_workflow_client.models.deployment.Deployment(
                                category = '', 
                                deployed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                id = '', 
                                name = '', ), )
                        ], 
                    pagination = alfresco_workflow_client.models.pagination.Pagination(
                        count = 56, 
                        has_more_items = True, 
                        max_items = 56, 
                        skip_count = 56, 
                        total_items = 56, ), )
            )
        else:
            return DeploymentPaging(
        )
        """

    def testDeploymentPaging(self):
        """Test DeploymentPaging"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
