# coding: utf-8

"""
    Alfresco Insight Engine REST API

    **Search SQL API** A Solr SQL passthrough, this feature provides the ability to use SQL to query Solr. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from alfresco_search_sql_client.models.sql_result_set_paging_list import SQLResultSetPagingList

class TestSQLResultSetPagingList(unittest.TestCase):
    """SQLResultSetPagingList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SQLResultSetPagingList:
        """Test SQLResultSetPagingList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SQLResultSetPagingList`
        """
        model = SQLResultSetPagingList()
        if include_optional:
            return SQLResultSetPagingList(
                entries = [
                    alfresco_search_sql_client.models.sql_result_set_row_entry.SQLResultSetRowEntry(
                        label = '', 
                        value = '', )
                    ],
                pagination = alfresco_search_sql_client.models.pagination.Pagination(
                    count = 56, 
                    has_more_items = True, 
                    max_items = 56, 
                    skip_count = 56, 
                    total_items = 56, )
            )
        else:
            return SQLResultSetPagingList(
        )
        """

    def testSQLResultSetPagingList(self):
        """Test SQLResultSetPagingList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
