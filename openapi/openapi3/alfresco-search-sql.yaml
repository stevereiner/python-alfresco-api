openapi: 3.0.0
info:
  description: >
    **Search SQL API**

    A Solr SQL passthrough, this feature provides the ability to use SQL to query Solr.
  title: Alfresco Insight Engine REST API
  version: "1"
paths:
  /sql:
    post:
      description: >
        **Note**: this endpoint is available in Alfresco 6.0 and newer versions.

        This will require Insight Engine and will not work with Alfresco Search Services.


        **You specify all the parameters in this API in a JSON body**,

        A basic query looks like this:


        ```JSON

        {
          "stmt": "select * from alfresco",
          "locales": ["en_UK"],
          "timezone": "Europe/London",
          "includeMetadata":true
        }

        ```


        **Note:** the minimum possible query parameter required.

        ```JSON

        {
          "stmt":
        }

        ```

        The expected reponse will appear in the Alfresco format as seen below.

        ```JSON

        {
          "list": {
            "pagination": {
              "count": 1,
              "hasMoreItems": false,
              "totalItems": 1,
              "skipCount": 0,
              "maxItems": 100
          },
          "entries": [{
            "entry": [
              {
                "label": "aliases",
                "value": "{\"SITE\":\"site\"}"
              },
              {
                "label": "isMetadata",
                "value": "true"
              },
              {
                "label": "fields",
                "value": "[\"SITE\"]"
              }
            ]
          }]}}
          ```
          To override the default format set the format to solr.
          ```JSON
          {
            "stmt": "select * from alfresco",
            "format": "solr"
          }
        ```

        This will return Solr's output response.

        ```JSON

        {
          "result-set": {
          "docs": [
            {
              "aliases": {
              "SITE": "site"
            },
              "isMetadata": true,
              "fields": [ "SITE"]
            },
            {
                "RESPONSE_TIME": 23,
                "EOF": true
            }
          ]}
        }

        ```



        You can use the **locales parameter** to filter results based on locale.

        ```JSON

        "locales": ["en_UK", "en_US"]

        ```


        To include timezone in the query add the **timezone parameter**.

        ```JSON

        "timezone": "Japan"

        ```


        To include custom filter queries add the **filterQueries parameter**.

        ```JSON

        "filterQueries": ["-SITE:swsdp"]

        ```


        You can use the **includeMetadata parameter** to include addtional  information, this is by default set to false.


        ```JSON

        "includeMetadata": "false"

        ```

        Please note that if its set to true the first entry will represent the metdata requested

         ```JSON
         {
           "stmt": "select site from alfresco limit 2",
           "includeMetadata":true
         }
        ```

        The expected response:

        ```JSON

        "entries": [
          {
            #First entry holds the Metadata infromation as set by {includeMetadata:true}
            "entry": [
              {
                "label": "aliases",
                "value": "{\"SITE\":\"site\"}"

              },
              {
                "label": "isMetadata",
                "value": "true"
              },
              {
                "label": "fields",
                "value": "[\"SITE\"]"
              }
            ]
            #end of Metadata
          },
          {
            #Query result entry value.
            "entry": [
              {
                "label": "site",
                "value": "[\"test\"]"
              }
            ]
          },
          {
            "entry": [
            {
              "label": "site",
              "value": "[\"test\"]"
            }
            ]
          }
        ]

        ```
      operationId: search
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SQLSearchRequest"
        description: |
          Generic query API
        required: true
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SQLResultSetPaging"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Alfresco Insight Engine SQL Passthrough
      tags:
        - sql
      x-alfresco-since: "6.0"
security:
  - basicAuth: []
servers:
  - url: /alfresco/api/-default-/public/search/versions/1
components:
  securitySchemes:
    basicAuth:
      description: HTTP Basic Authentication
      type: http
      scheme: basic
  schemas:
    Error:
      properties:
        error:
          properties:
            briefSummary:
              type: string
            descriptionURL:
              type: string
            errorKey:
              type: string
            logId:
              type: string
            stackTrace:
              type: string
            statusCode:
              format: int32
              type: integer
          type: object
      required:
        - error
      type: object
    Pagination:
      properties:
        count:
          description: |
            The number of objects in the entries array.
          format: int64
          type: integer
        hasMoreItems:
          description: >
            A boolean value which is **true** if there are more entities in the
            collection

            beyond those in this response. A true value means a request with a larger value

            for the **skipCount** or the **maxItems** parameter will return more entities.
          type: boolean
        maxItems:
          description: |
            The value of the **maxItems** parameter used to generate this list,
            or if there was no **maxItems** parameter the default value is 100
          format: int64
          type: integer
        skipCount:
          description: >
            An integer describing how many entities exist in the collection
            before

            those included in this list.
          format: int64
          type: integer
        totalItems:
          description: >
            An integer describing the total number of entities in the
            collection.

            The API might not be able to determine this value,

            in which case this property will not be present.
          format: int64
          type: integer
      required:
        - count
        - hasMoreItems
        - skipCount
        - maxItems
      type: object
    SQLResultSetPaging:
      description: Query results
      properties:
        list:
          properties:
            entries:
              items:
                $ref: "#/components/schemas/SQLResultSetRowEntry"
              type: array
            pagination:
              $ref: "#/components/schemas/Pagination"
          type: object
      type: object
    SQLResultSetRowEntry:
      properties:
        label:
          type: string
        value:
          type: string
      type: object
    SQLSearchRequest:
      properties:
        filterQueries:
          items:
            type: string
          type: array
        format:
          type: string
        includeMetadata:
          type: boolean
        locales:
          items:
            type: string
          type: array
        stmt:
          type: string
        timezone:
          type: string
      type: object
    SolrResultSet:
      description: SQL results in Solr formatting
      properties:
        result-set:
          $ref: "#/components/schemas/docs"
      type: object
    docs:
      description: Array of documents returned by the query, note that this is a Solr
        convention.
      items:
        properties:
          label:
            type: string
          value:
            type: string
        type: object
      type: array
